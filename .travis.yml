sudo: required

language: php
php:
- '7.1.9'

# services:
#   - docker

branches:
  only:
  - master

# travis runtime environment from here or settings. : https://docs.travis-ci.com/user/environment-variables/
env:
  global:
    - ZIP_FILE="php-web-$TRAVIS_BUILD_NUMBER-$TRAVIS_COMMIT.zip"

    # travis-ci secure doc : https://docs.travis-ci.com/user/encryption-keys/
    # before install travis , first install ruby & gem
    # $ gem install travis
    # $ travis encrypt SOMEVAR="secretvalue"

    # AWS_ACCESS_KEY_ID_DEV
    - secure: ""
    # AWS_SECRET_ACCESS_KEY_DEV
    - secure: ""
    # AWS_ACCESS_KEY_ID_STG
    #    - secure: ""
    # AWS_SECRET_ACCESS_KEY_STG
    #    - secure: ""
    # AWS_ACCESS_KEY_ID_PROD , value : AKI....QMQ
    - secure: "OkZ/cwZf6x4I1QX4bg1a8TY4Wwab5KffKhtXEVspbhLhqmyP/kpq+ydL6hUnzd4x6mI56oQowDRFcyVvPhUmmTmsSzwBST1c8Jn2Iq6liZzuga1uP2U/jQGYZwrrWCeFGqAnNAE21PA0FEIZKYGI6jo5uLfthW1qa+LdisKyV2tW3KMgJ7Jnrq1BmupeR7slr24f3yJCBPlsvY9BeI5B8gbmcZSCluFeDljrAEdyxVEami2sJOmj0r5/v4RFFjTU2SWm/EeEVZsDFyGCBeuWvovO6itrvh5oynOmQrp9TKWYVin058md5zgst27D83wKTCTSCS6oQqKay37/Dwrdl/QDBqC9nU7C6ITeEiFXDfvoBugJgLPDPjBLonz33hKiwtzIZAaV+pfw8vKUwgnD2KD13OBugklBdDGfZpiRPWFavqsjRPvkB363pSwaDGjZTrG2YaYF+HaibYBD1o/JGZiNAa2VP0yMNvjFgxh+4AGl0zt4qkGRQwvXbyDIm7DSwXDCp5y8Ry3fYB42MadbCmnxEjAB/4gFV4Zu32tux1p4+faqWciPLrBApJjLvW8mUv0vplQK7x/mPFbaNbIkRiDsbUXSOLdhZ+uvS7ZjYEhmYA5VFitVDElZX0Km18XyJmtZ+eH7raSqkLGOdttTMrTgqSDYvdHUhMzEsqjhyg8="
    # AWS_SECRET_ACCESS_KEY_PROD
    - secure: "kfvxu1bNeOwIQubv6DryzEX+5qiHr2OL1qE3qvcYbAnNf80PKngqMakgo/z4WT/HaSwsT2I/5pqztn3bntyFD8Vg0OdgU8wXIVc4cJmx3WazJ+ecNwsn9bT6EDWQ+dBholOoaR7WG6h8D1EC5Y9tVWMrTPCT4pIEAt7HtOMdD4vUgsGB/03etxquCCzhnQhZpWDqYNvhmpd+GfogoFH8Ju3RuC1hW7flkDk0OWnWlosZc9aO9Q7MwJYmzOlIdZr0y7A/6O+moxHYtngvvAMvlkK/5oCMBJ62lS7Ovc+wnEV9GXFM6g45BTqxIoraHbCdhmDPX43c8QE5Hxnz1BDYnOYz17wsnCwK1YHYl8Vh8EzSMMUILfhJ0fdHWZCnn1ozYZiFjbZpveMP4k4QNw011hjaGhi6GF2a+JJ70DVi09dZCZeRLD2qNgdJWu2cAfS9LbXJ/7lb7b7WIa4T31Cwm0v2vnXdkLKnwmUvq+10Axd56viUKk8qHz185s0eLJ18ikAhjAjOiOU+LnmjM+aGCy5vB3MyT6fIBLURVVjuqDkIWLX1eyY3dcD3OVxRebgDdJgiBVuyrHnrQk/6t+HxP/2xeZ0R8irRFV1B0WewCm3rFokj3rFvXHMRDCbrC/I2gQ0lwu2O9tIeIOd7t6u8fBZM9CXs+/lpyH/T4PpvIZI=" 

    # global variables
    - AWS_ACCESS_KEY_ID=''
    - AWS_SECRET_ACCESS_KEY=''
    - AWS_REGION='ap-northeast-1'
    - S3_BUCKET=''
    - S3_FOLDER='demo-lab'
    - CODEDEPLOY_APP_NAME=''
    - CODEDEPLOY_GROUP=''


# notification - https://docs.travis-ci.com/user/notifications
# notifications:
#   email:
#     recipients:
#       - one@example.com
#       - other@example.com
#     on_success: never # default: change
#     on_failure: always # default: always
# integration to slack , setup on slack travis-ci app
notifications:
  email:
    on_failure: always
    on_success: never
  #slack:
  #  secure: "nUYjAZGN+uymXquFddUgPkbD/06atgwjWBRINpn3Hgq54+iJ8mSKJ5jSUaKUV4TCaQkwwv8+8GhwGTYeTkPq6/UBGQWeIVgfhzN0iXfjjhaBu0VhWzzeLfDFbD6ok0XRYdXYVnu3G3il7iXNSbCMH8jwsnrNvZNNEDovNxMA1LmPJ5v6Gg/+kGrngxYW0lIl/0+81TEBaVKo1KeIaEirRzIlN15tTNC6t3o9zV1dXaAE2H6ZbJLYj+NpsPCPYgjUf1seMBRCrMbTKcUu9yf2jwxXqZigtdmTAW5EZGro1ESv/v2kCnMmL5bmuDRizRw7CCnAANJQdJ3jVzVGK289+S/AqdcjGMYQxFRq/iyi4T6BZIbrHOTnKWwGq18djrEFxEysL6AC1rEDg7MTw2uQpiUAFIJff3PnXLEjJbKB/DR9zn3oLij4bxJ4CdnYwxZZvQO1zhQj2GhTzOYZ/G+DW3auuQI2ufVYaAiJf9NLoYLa1XXOyChAJhV3LEnZO8x78IRxwAmQKm/K6sTBIzXZXdb/heKCibnAEYUv7ZsKf8JzIKcv0nLreARqjBoUH181O+zhcjIdJKXmloQ67lUbtOFZD6jPQ1K/W1JZoAWcjX24g1VaApYPbMJDs8hMfZNFO/s52J/UQ3zy9WWUQK6Vp1AZgqErXEqO2+3MLh/wOhI="

cache:
  directories:
  - $COMPOSER_CACHE_DIR
  - $HOME/.composer/cache




# build lifecycle - https://docs.travis-ci.com/user/customizing-the-build/
# (OPTIONAL) Install apt addons
# (OPTIONAL) Install cache components
# before_install
# install
# before_script
# script
# (OPTIONAL) before_cache (for cleaning up cache)
# after_success or after_failure
# (OPTIONAL) before_deploy
# (OPTIONAL) deploy
# (OPTIONAL) after_deploy
# after_script

# set -e : when error stop build.
before_install:
  - set -e
  - echo `date +"%Y-%m-%d %H:%M:%S"`
  - echo $TRAVIS_BRANCH
  - if [[ $TRAVIS_BRANCH == "dev" ]]; then
      AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_DEV;
      AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_DEV;
      S3_BUCKET='';
      CODEDEPLOY_APP='';
      CODEDEPLOY_GROUP='';
    fi
  - if [[ $TRAVIS_BRANCH == "staging" ]]; then
      AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_STG;
      AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_STG;
      S3_BUCKET='';
      CODEDEPLOY_APP='';
      CODEDEPLOY_GROUP='';
    fi
  - if [[ $TRAVIS_BRANCH == "master" ]]; then
      AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_PROD;
      AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_PROD;
      S3_BUCKET='bucket-weiting104';
      CODEDEPLOY_APP='app-demo';
      CODEDEPLOY_GROUP='ec2 ';
    fi


# put testing scripts here
script:
- echo 'script step...'

before_deploy:
- cd "$TRAVIS_BUILD_DIR";
  mkdir "$TRAVIS_BUILD_DIR/zip";
  zip -r "$TRAVIS_BUILD_DIR/zip/$ZIP_FILE" *


deploy:
- provider: S3
  access_key_id: &aws_access_key $AWS_ACCESS_KEY_ID
  secret_access_key: &aws_secret_key
    secure: $AWS_SECRET_ACCESS_KEY
  region: $AWS_REGION
  local_dir: $TRAVIS_BUILD_DIR/zip
  bucket: $S3_BUCKET
  upload-dir: $S3_FOLDER
  skip_cleanup: true
  on:
    all_branches: true

- provider: codedeploy
  access_key_id: *aws_access_key
  secret_access_key: *aws_secret_key
  region: $AWS_REGION
  bucket: $S3_BUCKET
  key: $S3_FOLDER/$ZIP_FILE
  bundle_type: zip
  application: $CODEDEPLOY_APP
  deployment_group: $CODEDEPLOY_GROUP
  wait-until-deployed: true
  on:
    all_branches: true
